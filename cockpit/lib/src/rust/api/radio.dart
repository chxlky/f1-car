// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'models.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'radio.freezed.dart';

// These functions are ignored because they are not marked as `pub`: `send_message`
// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `RadioState`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `fmt`, `fmt`, `fmt`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UdpRadioService>>
abstract class UdpRadioService implements RustOpaqueInterface {
  Stream<RadioEvent> connect({required F1Car car});

  static Future<UdpRadioService> default_() =>
      RustLib.instance.api.crateApiRadioUdpRadioServiceDefault();

  Future<void> disconnect();

  factory UdpRadioService() =>
      RustLib.instance.api.crateApiRadioUdpRadioServiceNew();

  Future<void> ping();

  Future<void> requestIdentity();

  Future<void> requestPhysics();

  Future<void> sendControl({required int steering, required int throttle});

  Future<void> updateIdentity({required CarIdentity identity});

  Future<void> updatePhysics({required CarPhysics physics});
}

@freezed
sealed class RadioEvent with _$RadioEvent {
  const RadioEvent._();

  const factory RadioEvent.connected() = RadioEvent_Connected;
  const factory RadioEvent.disconnected() = RadioEvent_Disconnected;
  const factory RadioEvent.message(ServerMessage field0) = RadioEvent_Message;
  const factory RadioEvent.error(String field0) = RadioEvent_Error;
}
